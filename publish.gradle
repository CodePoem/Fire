apply plugin: 'maven-publish'
apply plugin: 'signing'

def pkgGroupId = PKG_GROUP_ID
def pkgArtifactId = PKG_ARTIFACT_ID
def pkgVersion = PKG_VERSION

group = pkgGroupId
version = pkgVersion

def getLocalRepositoryUrl() {
    return uri("${rootDir}/.repos")
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            def plugins = project.getPlugins()
            if (plugins.hasPlugin('com.android.library')) {
                releaseAAr(MavenPublication) {
                    from components.release

                    artifact androidSourcesJar

                    groupId pkgGroupId
                    artifactId pkgArtifactId
                    version pkgVersion

                    pom {
                        packaging = "aar"
                        // 构件名称，可以自定义
                        name = 'Fire'
                        // 构件描述
                        description = 'Android Logger Fire'
                        // 构件主页
                        url = 'https://github.com/CodePoem/Fire'
                        // 许可证名称和地址
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        // 开发者信息
                        developers {
                            developer {
                                name = 'CodePoem'
                                email = 'codepoemfun@gmail.com'
                            }
                        }
                        // 版本控制仓库地址
                        scm {
                            url = 'https://github.com/CodePoem/Fire'
                            connection = 'scm:git:github.com/CodePoem/Fire.git'
                            developerConnection = 'scm:git:ssh://git@github.com/CodePoem/Fire.git'
                        }
                    }
                }
            } else if (plugins.hasPlugin('com.android.application')) {
                releaseAAb(MavenPublication) {
                    from components.release_aab

                    artifact androidSourcesJar

                    groupId pkgGroupId
                    artifactId pkgArtifactId
                    version pkgVersion

                    pom {
                        packaging = "aar"
                        // 构件名称，可以自定义
                        name = 'Fire'
                        // 构件描述
                        description = 'Android Logger Fire'
                        // 构件主页
                        url = 'https://github.com/CodePoem/Fire'
                        // 许可证名称和地址
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        // 开发者信息
                        developers {
                            developer {
                                name = 'CodePoem'
                                email = 'codepoemfun@gmail.com'
                            }
                        }
                        // 版本控制仓库地址
                        scm {
                            url = 'https://github.com/CodePoem/Fire'
                            connection = 'scm:git:github.com/CodePoem/Fire.git'
                            developerConnection = 'scm:git:ssh://git@github.com/CodePoem/Fire.git'
                        }
                    }
                }
            } else {
                releaseJar(MavenPublication) {
                    from components.java

                    task sourcesJar(type: Jar, dependsOn: classes) {
                        archiveClassifier.set("sources")
                        from sourceSets.main.allSource
                    }

                    artifact sourcesJar

                    groupId pkgGroupId
                    artifactId pkgArtifactId
                    version pkgVersion

                    pom {
                        packaging = "jar"
                        // 构件名称，可以自定义
                        name = 'Fire'
                        // 构件描述
                        description = 'Android Logger Fire'
                        // 构件主页
                        url = 'https://github.com/CodePoem/Fire'
                        // 许可证名称和地址
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        // 开发者信息
                        developers {
                            developer {
                                name = 'CodePoem'
                                email = 'codepoemfun@gmail.com'
                            }
                        }
                        // 版本控制仓库地址
                        scm {
                            url = 'https://github.com/CodePoem/Fire'
                            connection = 'scm:git:github.com/CodePoem/Fire.git'
                            developerConnection = 'scm:git:ssh://git@github.com/CodePoem/Fire.git'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                // 发布的位置，这里根据发布的版本区分了 LOCAL SNAPSHOT 和最终版本
                def localRepoUrl = getLocalRepositoryUrl()
                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('LOCAL') ? localRepoUrl : (version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl)
                if (!version.endsWith('LOCAL')) {
                    credentials {
                        def sonatypeUsername = ""
                        def sonatypePassword = ""
                        // local.properties file in the root director
                        def keyFile = project.rootProject.file('local.properties')
                        if (keyFile.exists()) {
                            Properties properties = new Properties()
                            properties.load(keyFile.newDataInputStream())
                            if (properties.containsKey("sonatype.username")) {
                                sonatypeUsername = properties.getProperty("sonatype.username")
                            }
                            if (properties.containsKey("sonatype.password")) {
                                sonatypePassword = properties.getProperty("sonatype.password")
                            }
                        }
                        // issues.sonatype.org 注册的账号
                        username sonatypeUsername
                        password sonatypePassword
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}
